
on:
  push:

env:
  GROUP_ID: com.octokat.app
  ARTIFACT_ID: install-octokat-app
  VERSION: 1.0-SNAPSHOT
  CLASS_NAME: InstallApp
  TARGET_GROUP_ID: com.octokat.app
  TARGET_ARTIFACT_ID: octokat-app
  TARGET_VERSION: 1.0-SNAPSHOT
  TARGET_CLASS_NAME: PublishApp

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Add ${{ env.CLASS_NAME }}.java file
        run: |
          SOURCE_PATH=src/main/java/$(echo ${{ env.GROUP_ID }} | tr . /)
          mkdir -p $SOURCE_PATH
          cat <<- END > $SOURCE_PATH/${{ env.CLASS_NAME }}.java
          package ${{ env.GROUP_ID }};
          import ${{ env.TARGET_GROUP_ID }}.${{ env.TARGET_CLASS_NAME }};
          public class ${{ env.CLASS_NAME }}
          {
              public static void main( String[] args )
              {
                  ${{ env.TARGET_CLASS_NAME }}.main( new String[0] );
              }
          }
          END

      - name: Add gradle.kts
        run: |
          cat > plain.gradle.kts << EOM
          plugins {
              `java-library`
          }

          repositories {
              jcenter()
              maven {
                  name = "remote"
                  url = uri("https://maven.pkg.github.com/${{ github.repository_owner }}/maven-publish")
                  credentials {
                      username = System.getenv("USERNAME")
                      password = System.getenv("TOKEN")
                  }
              }
          }

          group = "org.test.consume"
          version = "1.0-SNAPSHOT"

          dependencies {
              api("org.apache.commons:commons-math3:3.6.1")
              implementation("com.google.guava:guava:28.0-jre")
              testImplementation("org.junit.jupiter:junit-jupiter-api:5.5.1")
              testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.1")
              compile("${{ env.TARGET_GROUP_ID }}:${{ env.TARGET_ARTIFACT_ID }}:${{ env.TARGET_VERSION }}")
          }

          val test by tasks.getting(Test::class) {
              useJUnitPlatform()
          }
          EOM

      - run: gradle build -b plain.gradle.kts
        env:
          USERNAME: token
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
